resource "docker_container" "kafka" {
    attach                                      = false
    bridge                                      = null
    command                                     = [
        "/etc/confluent/docker/run",
    ]
    container_read_refresh_timeout_milliseconds = 15000
    cpu_set                                     = null
    cpu_shares                                  = 0
    domainname                                  = null
    entrypoint                                  = []
    env                                         = [
        "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092",
        "KAFKA_BROKER_ID=1",
        "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1",
        "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181",
    ]
    hostname                                    = "0d214f094a15"
    id                                          = "0d214f094a15111daf66c49cdb176448a10aaa81674bf5c4477c3d5724040ffb"
    image                                       = "sha256:fbbb6fa11b258a88b83f54d4f0bddfcffbf2279f99d66a843486e3da7bdfbf41"
    init                                        = false
    ipc_mode                                    = "private"
    log_driver                                  = "json-file"
    logs                                        = false
    max_retry_count                             = 0
    memory                                      = 0
    memory_swap                                 = 0
    must_run                                    = true
    name                                        = "kafka"
    network_data                                = [
        {
            gateway                   = "172.19.0.1"
            global_ipv6_address       = null
            global_ipv6_prefix_length = 0
            ip_address                = "172.19.0.3"
            ip_prefix_length          = 16
            ipv6_gateway              = null
            mac_address               = "96:da:4c:ac:9d:6c"
            network_name              = "kafka-network"
        },
    ]
    network_mode                                = "bridge"
    pid_mode                                    = null
    privileged                                  = false
    publish_all_ports                           = false
    read_only                                   = false
    remove_volumes                              = true
    restart                                     = "no"
    rm                                          = false
    runtime                                     = "runc"
    security_opts                               = []
    shm_size                                    = 64
    start                                       = true
    stdin_open                                  = false
    stop_signal                                 = null
    stop_timeout                                = 0
    tty                                         = false
    user                                        = "appuser"
    userns_mode                                 = null
    wait                                        = false
    wait_timeout                                = 60
    working_dir                                 = "/home/appuser"

    networks_advanced {
        aliases      = []
        ipv4_address = null
        ipv6_address = null
        name         = "kafka-network"
    }

    ports {
        external = 9092
        internal = 9092
        ip       = "0.0.0.0"
        protocol = "tcp"
    }
}

# docker_container.kafka_ui:
resource "docker_container" "kafka_ui" {
    attach                                      = false
    bridge                                      = null
    command                                     = [
        "/bin/sh",
        "-c",
        "java --add-opens java.rmi/javax.rmi.ssl=ALL-UNNAMED  $JAVA_OPTS -jar kafka-ui-api.jar",
    ]
    container_read_refresh_timeout_milliseconds = 15000
    cpu_set                                     = null
    cpu_shares                                  = 0
    domainname                                  = null
    entrypoint                                  = []
    env                                         = [
        "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092",
        "KAFKA_CLUSTERS_0_NAME=local",
    ]
    hostname                                    = "531ca5d777ae"
    id                                          = "531ca5d777ae32640c96d2b92808646e4f56aa7ec068bc06807e044a26a7974b"
    image                                       = "sha256:8f2ff02d64b0a7a2b71b6b3b3148b85f66d00ec20ad40c30bdcd415d46d31818"
    init                                        = false
    ipc_mode                                    = "private"
    log_driver                                  = "json-file"
    logs                                        = false
    max_retry_count                             = 0
    memory                                      = 0
    memory_swap                                 = 0
    must_run                                    = true
    name                                        = "kafka-ui"
    network_data                                = [
        {
            gateway                   = "172.19.0.1"
            global_ipv6_address       = null
            global_ipv6_prefix_length = 0
            ip_address                = "172.19.0.4"
            ip_prefix_length          = 16
            ipv6_gateway              = null
            mac_address               = "4a:68:f5:c2:29:93"
            network_name              = "kafka-network"
        },
    ]
    network_mode                                = "bridge"
    pid_mode                                    = null
    privileged                                  = false
    publish_all_ports                           = false
    read_only                                   = false
    remove_volumes                              = true
    restart                                     = "no"
    rm                                          = false
    runtime                                     = "runc"
    security_opts                               = []
    shm_size                                    = 64
    start                                       = true
    stdin_open                                  = false
    stop_signal                                 = null
    stop_timeout                                = 0
    tty                                         = false
    user                                        = "kafkaui"
    userns_mode                                 = null
    wait                                        = false
    wait_timeout                                = 60
    working_dir                                 = null

    networks_advanced {
        aliases      = []
        ipv4_address = null
        ipv6_address = null
        name         = "kafka-network"
    }

    ports {
        external = 8080
        internal = 8080
        ip       = "0.0.0.0"
        protocol = "tcp"
    }
}

# docker_container.zookeeper:
resource "docker_container" "zookeeper" {
    attach                                      = false
    bridge                                      = null
    command                                     = [
        "/opt/bitnami/scripts/zookeeper/run.sh",
    ]
    container_read_refresh_timeout_milliseconds = 15000
    cpu_set                                     = null
    cpu_shares                                  = 0
    domainname                                  = null
    entrypoint                                  = [
        "/opt/bitnami/scripts/zookeeper/entrypoint.sh",
    ]
    env                                         = [
        "ALLOW_ANONYMOUS_LOGIN=yes",
    ]
    hostname                                    = "5263f6ce5a5c"
    id                                          = "5263f6ce5a5c29e140eefbbb7ac904b923d2e2a2f0e568d6099fae7c0fffdeb7"
    image                                       = "sha256:733bc558e691762c1b7c6664d013fee614e614afe2b4d69125e18508bf06c62d"
    init                                        = false
    ipc_mode                                    = "private"
    log_driver                                  = "json-file"
    logs                                        = false
    max_retry_count                             = 0
    memory                                      = 0
    memory_swap                                 = 0
    must_run                                    = true
    name                                        = "zookeeper"
    network_data                                = [
        {
            gateway                   = "172.19.0.1"
            global_ipv6_address       = null
            global_ipv6_prefix_length = 0
            ip_address                = "172.19.0.2"
            ip_prefix_length          = 16
            ipv6_gateway              = null
            mac_address               = "5e:72:ca:f9:77:02"
            network_name              = "kafka-network"
        },
    ]
    network_mode                                = "bridge"
    pid_mode                                    = null
    privileged                                  = false
    publish_all_ports                           = false
    read_only                                   = false
    remove_volumes                              = true
    restart                                     = "no"
    rm                                          = false
    runtime                                     = "runc"
    security_opts                               = []
    shm_size                                    = 64
    start                                       = true
    stdin_open                                  = false
    stop_signal                                 = null
    stop_timeout                                = 0
    tty                                         = false
    user                                        = "1001"
    userns_mode                                 = null
    wait                                        = false
    wait_timeout                                = 60
    working_dir                                 = null

    networks_advanced {
        aliases      = []
        ipv4_address = null
        ipv6_address = null
        name         = "kafka-network"
    }

    ports {
        external = 2181
        internal = 2181
        ip       = "0.0.0.0"
        protocol = "tcp"
    }
}

# docker_image.kafka:
resource "docker_image" "kafka" {
    id          = "sha256:fbbb6fa11b258a88b83f54d4f0bddfcffbf2279f99d66a843486e3da7bdfbf41confluentinc/cp-kafka:7.5.0"
    image_id    = "sha256:fbbb6fa11b258a88b83f54d4f0bddfcffbf2279f99d66a843486e3da7bdfbf41"
    name        = "confluentinc/cp-kafka:7.5.0"
    repo_digest = "confluentinc/cp-kafka@sha256:fbbb6fa11b258a88b83f54d4f0bddfcffbf2279f99d66a843486e3da7bdfbf41"
}

# docker_image.kafka_ui:
resource "docker_image" "kafka_ui" {
    id          = "sha256:8f2ff02d64b0a7a2b71b6b3b3148b85f66d00ec20ad40c30bdcd415d46d31818provectuslabs/kafka-ui:latest"
    image_id    = "sha256:8f2ff02d64b0a7a2b71b6b3b3148b85f66d00ec20ad40c30bdcd415d46d31818"
    name        = "provectuslabs/kafka-ui:latest"
    repo_digest = "provectuslabs/kafka-ui@sha256:8f2ff02d64b0a7a2b71b6b3b3148b85f66d00ec20ad40c30bdcd415d46d31818"
}

# docker_image.zookeeper:
resource "docker_image" "zookeeper" {
    id          = "sha256:733bc558e691762c1b7c6664d013fee614e614afe2b4d69125e18508bf06c62dbitnami/zookeeper:latest"
    image_id    = "sha256:733bc558e691762c1b7c6664d013fee614e614afe2b4d69125e18508bf06c62d"
    name        = "bitnami/zookeeper:latest"
    repo_digest = "bitnami/zookeeper@sha256:733bc558e691762c1b7c6664d013fee614e614afe2b4d69125e18508bf06c62d"
}

# docker_network.kafka:
resource "docker_network" "kafka" {
    attachable  = false
    driver      = "bridge"
    id          = "fd6608c8fcc80eb3ca90af9aa5f572c791ae77187ca1e8cba437e1beb460f5e0"
    ingress     = false
    internal    = false
    ipam_driver = "default"
    ipv6        = false
    name        = "kafka-network"
    options     = {
        "com.docker.network.enable_ipv4" = "true"
    }
    scope       = "local"

    ipam_config {
        aux_address = {}
        gateway     = "172.19.0.1"
        ip_range    = null
        subnet      = "172.19.0.0/16"
    }
}
